//========
// GB APU
//========
// Frequency WORD Offsets For Period Table
constant C3($00)
constant C3#($02)
constant D3($04)
constant D3#($06)
constant E3($08)
constant F3($0A)
constant F3#($0C)
constant G3($0E)
constant G3#($10)
constant A3($12)
constant A3#($14)
constant B3($16)

constant C4($18)
constant C4#($1A)
constant D4($1C)
constant D4#($1E)
constant E4($20)
constant F4($22)
constant F4#($24)
constant G4($26)
constant G4#($28)
constant A4($2A)
constant A4#($2C)
constant B4($2E)

constant C5($30)
constant C5#($32)
constant D5($34)
constant D5#($36)
constant E5($38)
constant F5($3A)
constant F5#($3C)
constant G5($3E)
constant G5#($40)
constant A5($42)
constant A5#($44)
constant B5($46)

constant C6($48)
constant C6#($4A)
constant D6($4C)
constant D6#($4E)
constant E6($50)
constant F6($52)
constant F6#($54)
constant G6($56)
constant G6#($58)
constant A6($5A)
constant A6#($5C)
constant B6($5E)

constant C7($60)
constant C7#($62)
constant D7($64)
constant D7#($66)
constant E7($68)
constant F7($6A)
constant F7#($6C)
constant G7($6E)
constant G7#($70)
constant A7($72)
constant A7#($74)
constant B7($76)

constant C8($78)
constant C8#($7A)
constant D8($7C)
constant D8#($7E)
constant E8($80)
constant F8($82)
constant F8#($84)
constant G8($86)
constant G8#($88)
constant A8($8A)
constant A8#($8C)
constant B8($8E)

constant REST($FF)

constant N00($00) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N10($10) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N20($20) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N30($30) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N40($40) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N50($50) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N60($60) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N70($70) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N80($80) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N90($90) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NA0($A0) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NB0($B0) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NC0($C0) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant ND0($D0) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NE0($E0) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NF0($F0) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 0 (Bit 0..2)

constant N01($01) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N11($11) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N21($21) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N31($31) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N41($41) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N51($51) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N61($61) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N71($71) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N81($81) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N91($91) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NA1($A1) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NB1($B1) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NC1($C1) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant ND1($D1) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NE1($E1) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NF1($F1) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 1 (Bit 0..2)

constant N02($02) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N12($12) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N22($22) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N32($32) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N42($42) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N52($52) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N62($62) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N72($72) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N82($82) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N92($92) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NA2($A2) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NB2($B2) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NC2($C2) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant ND2($D2) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NE2($E2) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NF2($F2) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 2 (Bit 0..2)

constant N03($03) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N13($13) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N23($23) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N33($33) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N43($43) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N53($53) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N63($63) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N73($73) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N83($83) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N93($93) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NA3($A3) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NB3($B3) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NC3($C3) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant ND3($D3) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NE3($E3) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NF3($F3) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 3 (Bit 0..2)

constant N04($04) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N14($14) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N24($24) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N34($34) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N44($44) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N54($54) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N64($64) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N74($74) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N84($84) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N94($94) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NA4($A4) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NB4($B4) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NC4($C4) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant ND4($D4) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NE4($E4) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NF4($F4) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 4 (Bit 0..2)

constant N05($05) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N15($15) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N25($25) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N35($35) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N45($45) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N55($55) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N65($65) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N75($75) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N85($85) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N95($95) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NA5($A5) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NB5($B5) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NC5($C5) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant ND5($D5) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NE5($E5) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NF5($F5) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 5 (Bit 0..2)

constant N06($06) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N16($16) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N26($26) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N36($36) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N46($46) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N56($56) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N66($66) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N76($76) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N86($86) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N96($96) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NA6($A6) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NB6($B6) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NC6($C6) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant ND6($D6) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NE6($E6) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NF6($F6) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 6 (Bit 0..2)

constant N07($07) // Noise Rate  0 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N17($17) // Noise Rate  1 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N27($27) // Noise Rate  2 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N37($37) // Noise Rate  3 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N47($47) // Noise Rate  4 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N57($57) // Noise Rate  5 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N67($67) // Noise Rate  6 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N77($77) // Noise Rate  7 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N87($87) // Noise Rate  8 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N97($97) // Noise Rate  9 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NA7($A7) // Noise Rate 10 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NB7($B7) // Noise Rate 11 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NC7($C7) // Noise Rate 12 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant ND7($D7) // Noise Rate 13 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NE7($E7) // Noise Rate 14 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NF7($F7) // Noise Rate 15 (Bit 4..7), Counter Step/Width 15-Bit (Bit 3), Divider 7 (Bit 0..2)

constant N08($08) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N18($18) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N28($28) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N38($38) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N48($48) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N58($58) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N68($68) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N78($78) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N88($88) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant N98($98) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NA8($A8) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NB8($B8) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NC8($C8) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant ND8($D8) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NE8($E8) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)
constant NF8($F8) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 0 (Bit 0..2)

constant N09($09) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N19($19) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N29($29) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N39($39) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N49($49) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N59($59) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N69($69) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N79($79) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N89($89) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant N99($99) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NA9($A9) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NB9($B9) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NC9($C9) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant ND9($D9) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NE9($E9) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)
constant NF9($F9) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 1 (Bit 0..2)

constant N0A($0A) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N1A($1A) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N2A($2A) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N3A($3A) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N4A($4A) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N5A($5A) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N6A($6A) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N7A($7A) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N8A($8A) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant N9A($9A) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NAA($AA) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NBA($BA) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NCA($CA) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NDA($DA) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NEA($EA) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)
constant NFA($FA) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 2 (Bit 0..2)

constant N0B($0B) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N1B($1B) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N2B($2B) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N3B($3B) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N4B($4B) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N5B($5B) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N6B($6B) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N7B($7B) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N8B($8B) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant N9B($9B) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NAB($AB) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NBB($BB) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NCB($CB) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NDB($DB) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NEB($EB) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)
constant NFB($FB) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 3 (Bit 0..2)

constant N0C($0C) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N1C($1C) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N2C($2C) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N3C($3C) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N4C($4C) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N5C($5C) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N6C($6C) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N7C($7C) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N8C($8C) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant N9C($9C) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NAC($AC) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NBC($BC) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NCC($CC) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NDC($DC) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NEC($EC) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)
constant NFC($FC) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 4 (Bit 0..2)

constant N0D($0D) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N1D($1D) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N2D($2D) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N3D($3D) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N4D($4D) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N5D($5D) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N6D($6D) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N7D($7D) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N8D($8D) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant N9D($9D) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NAD($AD) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NBD($BD) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NCD($CD) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NDD($DD) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NED($ED) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)
constant NFD($FD) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 5 (Bit 0..2)

constant N0E($0E) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N1E($1E) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N2E($2E) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N3E($3E) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N4E($4E) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N5E($5E) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N6E($6E) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N7E($7E) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N8E($8E) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant N9E($9E) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NAE($AE) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NBE($BE) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NCE($CE) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NDE($DE) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NEE($EE) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)
constant NFE($FE) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 6 (Bit 0..2)

constant N0F($0F) // Noise Rate  0 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N1F($1F) // Noise Rate  1 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N2F($2F) // Noise Rate  2 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N3F($3F) // Noise Rate  3 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N4F($4F) // Noise Rate  4 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N5F($5F) // Noise Rate  5 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N6F($6F) // Noise Rate  6 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N7F($7F) // Noise Rate  7 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N8F($8F) // Noise Rate  8 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant N9F($9F) // Noise Rate  9 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NAF($AF) // Noise Rate 10 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NBF($BF) // Noise Rate 11 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NCF($CF) // Noise Rate 12 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NDF($DF) // Noise Rate 13 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NEF($EF) // Noise Rate 14 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)
constant NFF($FF) // Noise Rate 15 (Bit 4..7), Counter Step/Width 7-Bit (Bit 3), Divider 7 (Bit 0..2)

macro PeriodTable() { // Timing, 6 Octaves: C3..B8 (72 Words)
  dw $002C,$009C,$0106,$016B,$01C9,$0223,$0277,$02C6,$0312,$0356,$039B,$03DA // C3..B3
  dw $0416,$044E,$0483,$04B5,$04E5,$0511,$053B,$0575,$0589,$05AC,$05CE,$05ED // C4..B4
  dw $060A,$0627,$0642,$065B,$0672,$0689,$069E,$06B2,$06C4,$06D6,$06E7,$06F7 // C5..B5
  dw $0706,$0714,$0721,$072D,$0739,$0744,$074F,$0759,$0762,$076B,$0773,$077B // C6..B6
  dw $0783,$078A,$0790,$0797,$079D,$07A2,$07A7,$07AC,$07B1,$07B6,$07BA,$07BE // C7..B7
  dw $07C1,$07C4,$07C8,$07CB,$07CE,$07D1,$07D4,$07D6,$07D9,$07DB,$07DD,$07DF // C8..B8
}

macro GB_APU_INIT() { // APU Register Setup
  xor a // A = 0
  ldh (NR10_REG),a // NR10: Audio Sweep         (Sweep Shift = 0..2, Sweep Inc/Dec 3, Sweep Time 4..6) ($FF10)

  ldh (NR11_REG),a // NR11: Audio Channel #1    (Sound Length Data 0..5, Wave Pattern Duty 6..7) ($FF11)
  ldh (NR12_REG),a // NR12: Envelope Channel #1 (Env Sweep # 0..2, Env Up/Down 3, Env Init Value 4..7) ($FF12)
  ldh (NR13_REG),a // NR13: Sound Frequency #1  (Frequency LSB) ($FF13)
  ldh (NR14_REG),a // NR14: Sound Frequency #1  (Frequency MS3 Bits 0..2, Count/Consecutive Select 6, Init 7) ($FF14)

  ldh (NR21_REG),a // NR21: Audio Channel #2    (Sound Length Data 0..5, Wave Pattern Duty 6..7) ($FF16)
  ldh (NR22_REG),a // NR22: Envelope Channel #2 (Env Sweep # 0..2, Env Up/Down 3, Env Init Value 4..7) ($FF17)
  ldh (NR23_REG),a // NR23: Sound Frequency #2  (Frequency LSB) ($FF18)
  ldh (NR24_REG),a // NR24: Sound Frequency #2  (Frequency MS3 Bits 0..2, Count/Consecutive Select 6, Init 7) ($FF19)

  ldh (NR30_REG),a // NR30: Audio Channel #3    (Sound On/Off 7) ($FF1A)
  ldh (NR31_REG),a // NR31: Sound Length #3     (Sound Length) ($FF1B)
  ldh (NR32_REG),a // NR32: Volume #3           (Select Output Level 5..6) ($FF1C)
  ldh (NR33_REG),a // NR33: Sound Frequency #3  (Frequency LSB) ($FF1D)
  ldh (NR34_REG),a // NR34: Sound Frequency #3  (Frequency MS3 Bits 0..2, Count/Consecutive Select 6, Init 7) ($FF1E)

  ldh (NR41_REG),a // NR41: Sound Length #4     (Sound Length 0..5) ($FF20)
  ldh (NR42_REG),a // NR42: Envelope Channel #4 (Env Sweep # 0..2, Env Up/Down 3, Env Init Value 4..7) ($FF21)
  ldh (NR43_REG),a // NR43: Audio Counter       (Div Ratio 0..2, Polynomial Step 3, Polynomial Freq 4..7) ($FF22)
  ldh (NR44_REG),a // NR44: Audio Counter       (Count/Consecutive Select 6, Init Audio 7) ($FF23)

  ld a,%01110111   // Channel Control: S01 Volume = 7 (Bit 0..2), S02 Volume = 7 (Bit 4..6)
  ldh (NR50_REG),a // NR50: Channel Control     (SO1 VOUT 0..2, VIN SO1 3, SO2 VOUT 4..6, VIN SO2 7) ($FF24)

  ld a,%11111111   // Sound Output: Enable SO1 Chanel 0..3 (Bit 0..3), Enable SO2 Chanel 0..3 (Bit 4..7)
  ldh (NR51_REG),a // NR51: Sound Output        (Sound 1..4 To SO1 0..3, Sound 1..4 To SO2 4..7) ($FF25)

  ld a,%10001111   // Sound On/Off: Enable Channel 1..4 (Bit 0..3), Enable Master (Bit 7)
  ldh (NR52_REG),a // NR52: Sound On/Off        (Channel #1..4 On/Off 0..3, All Channels On/Off 7) ($FF26)
}